{
  "id": "1rnyEbUmmD18tKdFnYChF2LBSyykfOrfX9CGiJOb-LZM",
  "spreadsheet_metadata": {
    "spreadsheetId": "1rnyEbUmmD18tKdFnYChF2LBSyykfOrfX9CGiJOb-LZM",
    "properties": {
      "title": "3.style - new list",
      "locale": "en",
      "timeZone": "Europe/Warsaw"
    },
    "sheets": [
      {
        "properties": {
          "sheetId": 500082385,
          "title": "readme",
          "index": 0,
          "sheetType": "GRID",
          "gridProperties": {
            "rowCount": 14,
            "columnCount": 1
          }
        }
      },
      {
        "properties": {
          "sheetId": 286417144,
          "title": "Speffz",
          "index": 1,
          "sheetType": "GRID",
          "gridProperties": {
            "rowCount": 25,
            "columnCount": 5
          }
        }
      },
      {
        "properties": {
          "sheetId": 892631239,
          "title": "Corners",
          "index": 2,
          "sheetType": "GRID",
          "gridProperties": {
            "rowCount": 34,
            "columnCount": 22,
            "frozenRowCount": 1,
            "frozenColumnCount": 1
          }
        }
      },
      {
        "properties": {
          "sheetId": 116202496,
          "title": "Edges",
          "index": 3,
          "sheetType": "GRID",
          "gridProperties": {
            "rowCount": 1030,
            "columnCount": 23,
            "frozenColumnCount": 1
          }
        }
      },
      {
        "properties": {
          "sheetId": 1612155134,
          "title": "Parity",
          "index": 4,
          "sheetType": "GRID",
          "gridProperties": {
            "rowCount": 12,
            "columnCount": 1
          }
        }
      }
    ],
    "spreadsheetUrl": "https://docs.google.com/spreadsheets/d/1rnyEbUmmD18tKdFnYChF2LBSyykfOrfX9CGiJOb-LZM/edit"
  },
  "data": {
    "500082385": {
      "range": "readme!A1:A14",
      "values": {
        "0": {
          "cells": [
            "Algs I use in blindfold: 3bld and big blindes (but sometimes they are different)"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "3": {
          "cells": [
            "[A, B] means doing A, next B, next A' [inverse of A], next B' [inverse of B]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "4": {
          "cells": [
            "A: [B, C] means setupu A, next comm [B, C] and undo setupu. "
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "6": {
          "cells": [
            "#XY - same alg for the case"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "10": {
          "cells": [
            "Many thanks to authors of other lists: Noah Arthurs, Speffz, Meneghetti, Riffz, Oliver Frost, Maskow, Grzesiek Ja\u0142ocha, Jaycee"
          ],
          "successes": [],
          "failures": []
        },
        "11": {
          "cells": [
            "Almost all of \"my\" algs are copied from them."
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        }
      }
    },
    "286417144": {
      "range": "Speffz!A1:E25",
      "values": {
        "0": {
          "cells": [
            "Corners",
            "",
            "Edges"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "1": {
          "cells": [
            "Buffer=UBL",
            "",
            "Buffer=DF"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 2,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "2": {
          "cells": [
            "UBR = A",
            "",
            "UL=A"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "3": {
          "cells": [
            "UFR = B",
            "",
            "UB=B"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "4": {
          "cells": [
            "UFL = C",
            "",
            "UR=C"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "5": {
          "cells": [
            "LUF = D",
            "",
            "UF=U"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "6": {
          "cells": [
            "LFD = E",
            "",
            "LB=D"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "7": {
          "cells": [
            "LBD = F",
            "",
            "LU=E"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "8": {
          "cells": [
            "FUL = G",
            "",
            "LF=F"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "9": {
          "cells": [
            "FUR = H",
            "",
            "LD=G"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "10": {
          "cells": [
            "FDR = I",
            "",
            "FL=H"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "11": {
          "cells": [
            "FDL = J",
            "",
            "FU=J"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "12": {
          "cells": [
            "RUF = K",
            "",
            "FR=I"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "13": {
          "cells": [
            "RUB = L",
            "",
            "FD=\u0141"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "14": {
          "cells": [
            "RDB = M",
            "",
            "RF=K"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "15": {
          "cells": [
            "RDF = N",
            "",
            "RU=L"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "16": {
          "cells": [
            "BUR = O",
            "",
            "RB=M"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "17": {
          "cells": [
            "BDL = P",
            "",
            "RD=N"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "18": {
          "cells": [
            "BDR = R",
            "",
            "BR=O"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "19": {
          "cells": [
            "DFL = S",
            "",
            "BU=P"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "20": {
          "cells": [
            "DFR = T",
            "",
            "BL=R"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "21": {
          "cells": [
            "DBR = U",
            "",
            "BD=S"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "22": {
          "cells": [
            "DBL = W",
            "",
            "DL=T"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "23": {
          "cells": [
            "",
            "",
            "DR=W"
          ],
          "successes": [],
          "failures": []
        },
        "24": {
          "cells": [
            "",
            "",
            "DB=Z"
          ],
          "successes": [],
          "failures": []
        }
      }
    },
    "892631239": {
      "range": "Corners!A1:V34",
      "values": {
        "0": {
          "cells": [
            "",
            "A",
            "B",
            "C",
            "D",
            "E",
            "F",
            "G",
            "H",
            "I",
            "J",
            "K",
            "L",
            "M",
            "N ",
            "O",
            "P",
            "R",
            "S",
            "T",
            "U",
            "W"
          ],
          "successes": [],
          "failures": []
        },
        "1": {
          "cells": [
            "A",
            "",
            " x R2: [D2, R U R'] = Ab PLL",
            "R2: [L' B' L, F2]*",
            "U R': [R' D' R, U2]*",
            "U: [U, R' D R]*",
            "[R D' R', U]*",
            "x: [L, U R' U']",
            "[F' L F, R']",
            "[U, L' D2 L]",
            "[R D2 R', U]",
            "F: [B L B', R2]",
            "",
            "[U, R D R']",
            "U; [R' D' R, U]",
            "",
            "y: [U', R D R']",
            "y: [U', R' D' R]",
            "z: [U2, L D2 L']",
            "x': [R2, U L U']",
            "z' R': [U2, R' D2 R]*",
            "z' R: [D2, R U2 R']"
          ],
          "successes": [
            {
              "original": 8,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UFR",
                  "LUB",
                  "BUR"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000502111111111222222220330333334443444444553555555"
            },
            {
              "original": 9,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "ULF",
                  "FDR",
                  "UBL"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "200000000111111113224222022333333335544444444552555551"
            },
            {
              "original": 10,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "URB",
                  "FLD",
                  "UBL"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000002115111111022222222331333334444444445553555355"
            },
            {
              "original": 13,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "URB",
                  "UBL",
                  "RDB"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "004000000111111411222222222335333331444444043553555555"
            }
          ],
          "failures": [
            {
              "original": 2,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 3,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 4,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 5,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 6,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 7,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 11,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 14,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 16,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 17,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 18,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 19,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 20,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 21,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "2": {
          "cells": [
            "B",
            "",
            "",
            "R': [L' D2 L, U]**",
            "F: [U2, R' D' R]",
            "[R' D R, U2]",
            "[U2, L' D' L]**",
            "R': [F2, R' B2 R]",
            "",
            "[U2, L' D2 L]",
            "D' #NB*",
            "",
            "F: [R2, U' L' U]",
            "[U2, L' D L]",
            "[R' D' R, U2]",
            "R': [U2, L' D2 L]",
            "[R' D2 R, U2]",
            "y': [L D' L', U2]",
            "D: [R' F' R2 F R, U2]",
            "[R' F' R2 F R, U2]",
            "D': [R' F' R2 F R, U2]",
            " D2: [U2, R' F' R2 F R] // R2 D' # TU"
          ],
          "successes": [
            {
              "original": 5,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UFR",
                  "LDF",
                  "UBL"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000500113111111522222221333333332442444444554555055"
            },
            {
              "original": 9,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UFR",
                  "FDR",
                  "UBL"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000200111111113222222021333333332544444444554555555"
            },
            {
              "original": 13,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UFR",
                  "RDB",
                  "UBL"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000400111111311222222221533333332443444044554555555"
            },
            {
              "original": 14,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UFR",
                  "RFD",
                  "UBL"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000400111111115222222322333333332041444444554555555"
            },
            {
              "original": 16,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UFR",
                  "BDL",
                  "UBL"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000300311111111222222221333333032445444444554555555"
            },
            {
              "original": 19,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UFR",
                  "DRF",
                  "UBL"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000100111111110222222524333333332342444444554555555"
            }
          ],
          "failures": [
            {
              "original": 3,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 4,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 6,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 7,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 10,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 12,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 15,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 17,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 18,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 20,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 21,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "3": {
          "cells": [
            "C",
            "",
            "",
            "",
            "",
            "[L D L', U']",
            "[U, L' D' L]",
            "",
            "R': [F2,L' B' L]",
            "[L' D2 L, U]",
            "D: #NC*",
            "[R B' R', F]",
            "[B', R' F R']",
            "[U, L' D L]",
            "[L D' L\u2019, U']",
            "R2: [U, L' D2 L]",
            "y'[R' D R, U']*",
            "[L D2 L', U']",
            "D: [F2, L' B' L]",
            "[L' B' L, F2]",
            "z' x: [U2, R' D2 R]**",
            "z' x R': [U2, R' D2 R]*"
          ],
          "successes": [
            {
              "original": 5,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "ULF",
                  "LDF",
                  "UBL"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "500000000113111111522222222333333335444444444552555051"
            },
            {
              "original": 6,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "ULF",
                  "LBD",
                  "UBL"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "500000000511111111221222222333333335444444444052555553"
            },
            {
              "original": 9,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "ULF",
                  "UBL",
                  "FDR"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "002000000111111115225222022333333331244444444554555553"
            },
            {
              "original": 11,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "ULF",
                  "RUF",
                  "UBL"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "400000300111111111222222225333333335440444444552555550"
            },
            {
              "original": 12,
              "edge_cycles": [
                [
                  "UB",
                  "RF",
                  "RB"
                ]
              ],
              "corner_cycles": [
                [
                  "URB",
                  "DBR"
                ],
                [
                  "UBL",
                  "RFD"
                ]
              ],
              "unsolved_corners_count": 4,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "004004001111111413222222032334332332544444003551555555"
            },
            {
              "original": 13,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "ULF",
                  "RDB",
                  "UBL"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "400000000111111311223222222533333335444444044552555551"
            },
            {
              "original": 14,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "ULF",
                  "RFD",
                  "UBL"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "400000000111111115221222322333333335044444444552555552"
            },
            {
              "original": 17,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "ULF",
                  "BRD",
                  "UBL"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "300000000111111511221222222033333335444444344552555554"
            },
            {
              "original": 19,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "ULF",
                  "UBL",
                  "DRF"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "001000000111111110225222222333333334544444444552555553"
            }
          ],
          "failures": [
            {
              "original": 8,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 10,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 15,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 16,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 18,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 20,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 21,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            }
          ]
        },
        "4": {
          "cells": [
            "D",
            "",
            "",
            "* R: [U', L D2 L'] // U AaPLL",
            "",
            "F': [L2, U R2 U']",
            "F: [U2, L' D L] = F: #BF",
            "",
            "F: [U2, L' D2 L]",
            "F2#NG*",
            "F R': [F2, R' B2 R] = x U R': [ R' D2 R, U2]",
            "R F': [U R U', L2]**",
            "F2: [R2, U' L' U]*",
            "F2: [R, F L2 F']",
            "U L: [ L D' L', U2]",
            "R' F: [R' D' R, U2]",
            "F: [R' D2 R, U2]**",
            "F2: [D, R' U R]",
            "z' U': [R U R', D2]",
            "F: [R' D R, U2]",
            "R2 F: [R' D' R, U2]***",
            "U R': [U2 , R' D2 R]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 3,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 5,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 6,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 8,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 9,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 10,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 11,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 12,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 13,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 14,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 15,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 16,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 17,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 18,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 19,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 20,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 21,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "5": {
          "cells": [
            "E",
            "",
            "",
            "** U2 Aa PLL",
            "",
            "",
            "z x': [R' D R, U'] = y':[U' R U, L']",
            "D: [F2, R' B2 R] = D: #GN",
            "F: [U, L' D2 L]",
            "[D, R U2 R']",
            "",
            "[R B' R, F2]",
            "[B', R' F2 R]",
            "y': [D2, R U' R']",
            "L: [R U' R', D2 ]",
            "R': [R' D R, U2]",
            " y': [R' U' R', D']",
            "F: [L D2 L', U']* ",
            "",
            "z' x: [ D', R U2 R']",
            "R: [R U2 R', D]",
            "z' x D R': [U2, R' D2 R]**"
          ],
          "successes": [
            {
              "original": 9,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UBL",
                  "FDR",
                  "LDF"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "002000000113111111522222522333333331244444444554555055"
            },
            {
              "original": 12,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "URB",
                  "LUB",
                  "FLD"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "005000005113111111022222222333333331444444440552555455"
            }
          ],
          "failures": [
            {
              "original": 3,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 6,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 7,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 8,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 13,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 14,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 15,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 16,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 17,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 19,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 20,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 21,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            }
          ]
        },
        "6": {
          "cells": [
            "F",
            "",
            "",
            "",
            "",
            "*y: [R' D2 R, U]",
            "",
            "y': [L' , U' R' U]",
            "x': [U' , L D' L']",
            "[B', L F2 L']",
            "[L U L', D']",
            "R': [L U L', D2]",
            "D2: #NL **",
            "R: [D2, L U L']",
            "[D2, L U L']",
            "R': [L' D' L, U2]",
            "",
            "[R' U R, D']",
            "F': [L U L', D2]",
            "R': [R' U R', D']*",
            "R2: [L' D' L, U2]****"
          ],
          "successes": [
            {
              "original": 9,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UBL",
                  "LBD",
                  "FDR"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "005000000411111113222222022333333133544444444251555555"
            },
            {
              "original": 10,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UBL",
                  "FLD",
                  "LBD"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "002000000511111111522222222333333335444444444051555355"
            },
            {
              "original": 14,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UBL",
                  "LBD",
                  "RFD"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "005000000111111115222222322333333233044444444451555555"
            },
            {
              "original": 17,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UBL",
                  "LBD",
                  "BRD"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "005000000111111511222222222033333433444444344351555555"
            }
          ],
          "failures": [
            {
              "original": 5,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 7,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 8,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 11,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 12,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 13,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 15,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 18,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 19,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 20,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            }
          ]
        },
        "7": {
          "cells": [
            "G",
            "",
            "",
            "",
            "",
            "",
            "* [U, L' D' L]",
            "",
            "[L, U' R' U]",
            "[R' B2 R, F2]",
            "y': [R, U L U']",
            "x': [L', U' R U]",
            "[L', U R U']",
            "[U' R2 U, L]",
            "[U' R U, L] ",
            "R2: [R' B2 R, F2]",
            "y' R2: [L' U' L, D2]",
            "[L', U R' U]",
            "D: [L', U R2 U']",
            "[L', U R2 U]",
            "x: [R U2 R', D2]",
            "U': [U' R' U, L2]"
          ],
          "successes": [
            {
              "original": 8,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "ULF",
                  "BLU",
                  "RUF"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "302000500111111111220222222333333334440444444550555555"
            },
            {
              "original": 9,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "ULF",
                  "DRF",
                  "BLU"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "102000000111111113222222022333333330544444444555555554"
            },
            {
              "original": 12,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "ULF",
                  "BUR",
                  "BLU"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "302000005111111111224222222333333330444444440555555550"
            },
            {
              "original": 13,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "ULF",
                  "DBR",
                  "BLU"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "102000000111111311224222222533333330444444044555555553"
            },
            {
              "original": 14,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "ULF",
                  "FDR",
                  "BLU"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "202000000111111115224222322333333330044444444555555551"
            },
            {
              "original": 17,
              "edge_cycles": [
                [
                  "UR",
                  "UL",
                  "FL"
                ]
              ],
              "corner_cycles": [
                [
                  "ULF",
                  "FLD"
                ],
                [
                  "UFR",
                  "UBL"
                ]
              ],
              "unsolved_corners_count": 4,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "224000000110111111501222223333333330445445444552555245"
            }
          ],
          "failures": [
            {
              "original": 6,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 10,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 11,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 15,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 16,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 18,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 20,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 21,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "8": {
          "cells": [
            "H",
            "",
            "",
            "",
            "",
            "",
            "** y': [R D2 R', U2]",
            "",
            "",
            "[R' B2 R, F]",
            "F': [R' B2 R, F2]",
            "",
            "[B', R' F' R]",
            "F: [D', R U2 R']",
            "U\u2019: [R2, D\u2019 L D]**",
            "R': [U2, R' F' R2 F R]*",
            "R': [U' R2 U, L] // F# IP",
            "[R2, F' L F]",
            "z' [D2, R U' R']",
            "z: [L' U2 L, D']**",
            "[L F' L', B2]",
            "z' R: [D2, R U' R']"
          ],
          "successes": [
            {
              "original": 9,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UFR",
                  "RFD",
                  "LUB"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "002000400111111113222222022333333334541444444550555555"
            },
            {
              "original": 12,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UFR",
                  "URB",
                  "LUB"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "002000005111111111222222224333333334443444440550555555"
            },
            {
              "original": 17,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UFR",
                  "DBR",
                  "LUB"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "002000100111111511222222223033333334444444344550555555"
            },
            {
              "original": 20,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UFR",
                  "RDB",
                  "LUB"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "002000400111111011222222221333333334443444544550555555"
            }
          ],
          "failures": [
            {
              "original": 6,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 10,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 13,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 14,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 15,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 16,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 19,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 21,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "9": {
          "cells": [
            "I",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "[F', R' B2 R']",
            "D: [D L' D', R2]*",
            "D: #ML***",
            "[D', R U2 R']",
            "",
            "y U' R': [U2, R' D R]",
            "[D2, R U2 R']",
            "F: [R' U R, D2] ",
            "U L: [D2, L U' L']*",
            "",
            "x': [L D2 L', U2]*****",
            "D: #NS"
          ],
          "successes": [
            {
              "original": 13,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UBL",
                  "FDR",
                  "RDB"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "002000000111111311222222422533333331344444044554555555"
            },
            {
              "original": 16,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UBL",
                  "FDR",
                  "BDL"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "002000000311111111222222322333333031544444444554555555"
            }
          ],
          "failures": [
            {
              "original": 11,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 12,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 15,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 17,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 18,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 20,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 21,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "10": {
          "cells": [
            "J",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "*B: [L2, B R' B']",
            "",
            "D: [R', F L2 F']",
            "D: [R2, U' L' U]",
            "F': [D', R U2 R']",
            "y: [L' U2 L, D]",
            "R2: [R' B2 R, F']",
            "F': [D2, R U2 R']",
            "[R' U R, D2]",
            "",
            "R': [R' U R, D2]",
            "x: [D2, R U' R']",
            "U': [U' R U, L2]"
          ],
          "successes": [
            {
              "original": 17,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UBL",
                  "FLD",
                  "BRD"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "002000000111111511322222222033333335444444344551555455"
            }
          ],
          "failures": [
            {
              "original": 9,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 11,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 12,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 13,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 14,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 15,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 16,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 19,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 20,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 21,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "11": {
          "cells": [
            "K",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "* R':  [F',R' B2 R]",
            "",
            "[U' L' U, R]",
            "R': [U' L' U, R2]",
            "[F L2 F\u2019, R']",
            "R': [U2, R' D' R]",
            "[L, B' R B]",
            "R' U ; [R' D' R, U]",
            "x': [U' R U, L2]",
            "x' [R U' R', D']",
            "z' x': [U2, R' D R] //[L: [U, L D2 L']]*******",
            "D x': [U' R U, L2]"
          ],
          "successes": [
            {
              "original": 12,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UFR",
                  "BUR",
                  "BLU"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "004000305111111111222222220333333330444444440552555555"
            },
            {
              "original": 14,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UFR",
                  "FDR",
                  "BLU"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "004000200111111115222222321333333330044444444552555555"
            },
            {
              "original": 16,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UFR",
                  "BLU",
                  "DLB"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "003000300011111111222222225333333431440444444255555555"
            }
          ],
          "failures": [
            {
              "original": 10,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 13,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 15,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 17,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 18,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 20,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 21,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "12": {
          "cells": [
            "L",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "**y: [U, R D' R'] ",
            "* // F#JB // F2#NG",
            "",
            " [R', U' L' U]",
            "[R2, U' L' U]",
            "",
            "[U R U', L]",
            "D': [R2, U' L' U]",
            "[U R U', L2]",
            "y: [R, U' L2 U]",
            "R: [R U2 R', D']",
            "D: [U R U', L2]"
          ],
          "successes": [
            {
              "original": 13,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "URB",
                  "BRD",
                  "LUB"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "004000003111111311222222222531333333444444044550555555"
            },
            {
              "original": 14,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "URB",
                  "DRF",
                  "LUB"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "004000001111111115222222322332333333044444444550555555"
            },
            {
              "original": 16,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "URB",
                  "LBD",
                  "LUB"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "004000005311111111222222222331333033444444443550555555"
            },
            {
              "original": 18,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "URB",
                  "LDF",
                  "LUB"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "004000005110111111322222222332333333444444441550555555"
            }
          ],
          "failures": [
            {
              "original": 10,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 11,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 17,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 19,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 20,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 21,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "13": {
          "cells": [
            "M",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "**F: [R' F' R2 F R, U2]",
            "* F': [L2, U R U']",
            "",
            "[F L2 F', R]*",
            "x R' U: [U L2 U', R2] = R F #LN",
            "y: [D, R' U' R]",
            "",
            "x: [L2 , U' R U]",
            "y' R: [R U R', D2]",
            "",
            "U': [L2, F R2 R']"
          ],
          "successes": [],
          "failures": [
            {
              "original": 11,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 12,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 14,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 15,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 16,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 18,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 19,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 21,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "14": {
          "cells": [
            "N",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "** L': [L' U2 L, D]*",
            "",
            "",
            "R': [L' D L, U2]",
            "[B\u2019 R2 B, L]",
            "[R' U R, D] ",
            "z': [D2, R U R']",
            "",
            "D\u2019 R\u2019: [D2, R\u2019 U R, D2]",
            "D: [U R' U', L2]"
          ],
          "successes": [
            {
              "original": 16,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UBL",
                  "RFD",
                  "BDL"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "004000000311111115222222122333333032344444444551555555"
            },
            {
              "original": 17,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UBL",
                  "RFD",
                  "BRD"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "004000000111111511222222422033333332344444344551555555"
            }
          ],
          "failures": [
            {
              "original": 12,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 15,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 18,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 20,
              "failure_id": 0,
              "failure_description": "This statement appears to have incorrect syntax. 'D2,R'UR,D2'"
            },
            {
              "original": 21,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "15": {
          "cells": [
            "O",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "*** y [ U L' U', R']",
            "",
            "*y [ U L' U', R']",
            "",
            "R': [R' D2 R, U2]",
            "x R: [R U R', D2]",
            "D L: [U2, L D' L']**",
            "L: [U2, L D' L']",
            "R2: [L' D2 L, U2]",
            "R D': #TU"
          ],
          "successes": [],
          "failures": [
            {
              "original": 12,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 14,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 16,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 17,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 18,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 19,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 20,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 21,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "16": {
          "cells": [
            "P",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "** // D: [R2, F' L F]",
            "* z D L': [L' U2 L, D2]",
            "",
            "[L, U R' U']",
            "x' D' #PN***",
            "[L, U R2 U']",
            "R: [R U2 R', D2]"
          ],
          "successes": [
            {
              "original": 17,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UBL",
                  "BDL",
                  "BRD"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "003000000411111511222222222033333331444444344155555555"
            },
            {
              "original": 19,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UBL",
                  "BDL",
                  "DRF"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "003000000411111110222222522333333131344444444255555555"
            }
          ],
          "failures": [
            {
              "original": 14,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 15,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 18,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 20,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "17": {
          "cells": [
            "R",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "* [U', R' D R]",
            "",
            "[U R' U', L2]",
            "z: [L' U2 L, D] ",
            "",
            "R' D: #SA //D2 R': [R' U R, D2]***"
          ],
          "successes": [
            {
              "original": 18,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UBL",
                  "BRD",
                  "DFL"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "003000000110111511322222222133333334444444244551555555"
            }
          ],
          "failures": [
            {
              "original": 16,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 19,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 21,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "18": {
          "cells": [
            "S",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "**z U R: [R D R', U2]",
            "*R' y: [U, R' D2 R] // R z' x': [R U2 R', D'] ",
            "",
            "[L2, U R2 U']",
            "U: [D2, R2' U' R2 U R2]****** ",
            "D2: #UT"
          ],
          "successes": [
            {
              "original": 19,
              "edge_cycles": [],
              "corner_cycles": [
                [
                  "UBL",
                  "DFL",
                  "DRF"
                ]
              ],
              "unsolved_corners_count": 3,
              "unsolved_edges_count": 0,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "001000000111111110422222522333333332344444444555555255"
            }
          ],
          "failures": [
            {
              "original": 16,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 17,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 20,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 21,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "19": {
          "cells": [
            "T",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "*R D #BT",
            "",
            "x: [D2, R U R']",
            "z U2 R:[D2, R U2 R']"
          ],
          "successes": [],
          "failures": [
            {
              "original": 18,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 20,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 21,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "20": {
          "cells": [
            "U",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "**y x': [U2, R' F' R2 F R]",
            "*y: [R', U' L2 U]",
            "",
            "z R': [U2, R' D2 R]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 18,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 19,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 21,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "21": {
          "cells": [
            "W",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "***y R': [U, R' D2 R]",
            "**[F' L F, R]",
            "*D' #TA"
          ],
          "successes": [],
          "failures": [
            {
              "original": 18,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 19,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 20,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "22": {
          "cells": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "**y x': [U L U', R2]",
            "*z R': [U2, R' F' R2 F R]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 20,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 21,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            }
          ]
        },
        "23": {
          "cells": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "***z x': [U2, R' F' R2 F R]// [U' L' [L' D L, U2]]",
            "** R2 U': [U' R U, L2]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 20,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 21,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            }
          ]
        },
        "24": {
          "cells": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "****R: [L F2 L', B']",
            "*** R' U B2 U' R U R' B2 R U'  (cantin)"
          ],
          "successes": [],
          "failures": [
            {
              "original": 20,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 21,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "25": {
          "cells": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "*****z x: [ D2, L' U' L] = y [R2, D' L' D]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 20,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "26": {
          "cells": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "******y R' U R: [R U' R', D2] // R2 D: [U2, R' F' R2 F R]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 20,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "27": {
          "cells": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "2"
          ],
          "successes": [],
          "failures": []
        },
        "28": {
          "cells": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "*****x U: [D2, R U R']"
          ],
          "successes": [],
          "failures": [
            {
              "original": 20,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            }
          ]
        }
      }
    },
    "116202496": {
      "range": "Edges!A1:W1000",
      "values": {
        "0": {
          "cells": [
            "",
            "A",
            "B",
            "C",
            "U",
            "D",
            "E",
            "F",
            "G",
            "H",
            "J",
            "I",
            "K",
            "L",
            "M",
            "N",
            "O",
            "P",
            "R",
            "S",
            "T",
            "W",
            "Z"
          ],
          "successes": [],
          "failures": []
        },
        "1": {
          "cells": [
            "A",
            "",
            "[M2, L U' L' U]",
            "U' M' U2 M U'",
            "U: #AB",
            "Uw: #BO",
            "",
            "Uw: #BR",
            "y' [U' R2 U, M']",
            "[U M2 U', R]",
            "[F' L F, M']",
            "U: [M2, U R U']",
            "Uw: # BH",
            "y' [U' R2 U, M]",
            "Uw: #BI",
            "U: #BN",
            "U: #BO",
            "U: #BL",
            "[L, U M2 U']",
            "[B' L' B, M]",
            "[U M2 U', L2]",
            "U: #BW",
            "U: [M', D2]"
          ],
          "successes": [
            {
              "original": 2,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "UL"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111110111222522222333332333444444444555553555"
            },
            {
              "original": 3,
              "edge_cycles": [
                [
                  "UR",
                  "DF",
                  "UL"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000010111110111222522222333333333444442444555554555"
            },
            {
              "original": 9,
              "edge_cycles": [
                [
                  "UR",
                  "DB",
                  "FR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000010111211111222222202333433333444443444555555555"
            },
            {
              "original": 10,
              "edge_cycles": [
                [
                  "UF",
                  "LU",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "010500000111112111222020222333333333444444444555552555"
            },
            {
              "original": 18,
              "edge_cycles": [
                [
                  "UL",
                  "BL",
                  "DF"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "030000000111110111222522222333333313444444444525555555"
            },
            {
              "original": 19,
              "edge_cycles": [
                [
                  "UL",
                  "DF",
                  "BD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "010000000111513111222122222333033333444444444555552555"
            },
            {
              "original": 20,
              "edge_cycles": [
                [
                  "UL",
                  "DF",
                  "DL"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "010000000101111111222522222333333333444444444555552555"
            }
          ],
          "failures": [
            {
              "original": 4,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 5,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 7,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 11,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 12,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 14,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 15,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 16,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 17,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 21,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 22,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "2": {
          "cells": [
            "B",
            "[L U' L' U, M2]",
            "",
            "[R' U R U', M2]",
            "U2 M' U2 M",
            "Uw': #HA // inv DB",
            "[M2, B L' B']",
            "inv FB",
            "inv GB",
            "inv HB",
            "D: [U R2 U', M']",
            "[M2, U R U']",
            "[M2, B' R2 B]",
            "[M2, B' R B]",
            "[M2, R' B' R B]",
            "[M2, B' R' B]",
            "[M2, U R' U]",
            "",
            "[U L U, M2]",
            "U; [B R B', M]",
            "[M2, U' L2 U]",
            "[M2, U R2 U']",
            "[M', D2]"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UB",
                  "UL",
                  "DF"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "010000000111110111222322222333335333444444444555552555"
            },
            {
              "original": 3,
              "edge_cycles": [
                [
                  "UB",
                  "UR",
                  "DF"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000010111110111222322222333334333444442444555555555"
            },
            {
              "original": 4,
              "edge_cycles": [
                [
                  "UB",
                  "UF",
                  "DF"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000100000111110111222322222333332333444444444555555555"
            },
            {
              "original": 6,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "LU"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "030001000111115111222022222333332333444444444555550555"
            },
            {
              "original": 11,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "FR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111112111222422202333332333434444444555555555"
            },
            {
              "original": 12,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "RF"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111114111222222232333332333404444444555555555"
            },
            {
              "original": 13,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "RU"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001030111114111222022222333332333444440444555555555"
            },
            {
              "original": 14,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "RB"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111114111222322222333332333444444404555555555"
            },
            {
              "original": 15,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "RD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111114131222122222333332333444044444555555555"
            },
            {
              "original": 16,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "DB",
                  "BR",
                  "UF"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 5,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111311111222323222303432333444444424555555555"
            },
            {
              "original": 18,
              "edge_cycles": [
                [
                  "UB",
                  "BL",
                  "DF",
                  "DB",
                  "UF"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 5,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000003000111011111222323222333235313444444444525555555"
            },
            {
              "original": 20,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "DL"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000101111111222522222333332333444444444555355555"
            },
            {
              "original": 21,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "DR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111111101222422222333332333444344444555555555"
            },
            {
              "original": 22,
              "edge_cycles": [
                [
                  "UB",
                  "DB",
                  "DF"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111110111222322222333233333444444444555555555"
            }
          ],
          "failures": [
            {
              "original": 5,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 7,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 8,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 9,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 10,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 19,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "3": {
          "cells": [
            "C",
            "U M' U2 M U",
            "[M2, R' U R U']",
            "",
            "U': #CB",
            "Uw': #BH",
            "y'[U R2 U', M']",
            "Uw': #BI",
            "y' U2: [U' R2 U, M']",
            "U': [M2, U' R U]*",
            "[F R' F', M']",
            "[U M2 U, R]",
            "Uw': #BO",
            "",
            "Uw': #BR",
            "U': #BN",
            "U': #BO",
            "U': #BE",
            "U': #BR",
            "[B R B', M]",
            "U': #BT",
            "[U' M2 U, R2]",
            "U': [M', D2]"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UR",
                  "UL",
                  "DF"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "010000000111110111222422222333333333444445444555552555"
            },
            {
              "original": 2,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "UR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111110111222422222333332333444443444555555555"
            },
            {
              "original": 10,
              "edge_cycles": [
                [
                  "UR",
                  "DF",
                  "FU"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000400010111112111222020222333333333444442444555555555"
            },
            {
              "original": 19,
              "edge_cycles": [
                [
                  "UR",
                  "DF",
                  "BD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000010111413111222122222333033333444442444555555555"
            },
            {
              "original": 21,
              "edge_cycles": [
                [
                  "UR",
                  "DF",
                  "DR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000010111111101222422222333333333444442444555555555"
            }
          ],
          "failures": [
            {
              "original": 4,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 5,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 7,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 8,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 9,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 12,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 14,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 15,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 16,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 17,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 18,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 20,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 22,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "4": {
          "cells": [
            "U",
            "[M D2 M', U']*",
            "M' U2 M U2",
            "[M D2 M', U]* ",
            "",
            "B': #BU",
            "U2: [M2, B' R B]",
            "U2: #BF",
            "U2: #BG",
            "U2: #BH",
            "",
            "U2: #BI",
            "U2: #BK",
            "U2: #BE",
            "B: [U2 M' U2 M]",
            "U2: #BN",
            "U2: #BO",
            "D: [U' R2 U, M]",
            "U2: #BR",
            "U'; [B R B', M]",
            "[M' U2 M, D]",
            "[M' U2 M, D']",
            "x: [M', U2]"
          ],
          "successes": [
            {
              "original": 2,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "UF"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111110111222223222333332333444444444555555555"
            },
            {
              "original": 20,
              "edge_cycles": [
                [
                  "UF",
                  "DL",
                  "DF"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000100000111110111222225222333333333444444444555255555"
            },
            {
              "original": 21,
              "edge_cycles": [
                [
                  "UF",
                  "DR",
                  "DF"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000100000111110111222224222333333333444244444555555555"
            }
          ],
          "failures": [
            {
              "original": 1,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 3,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 5,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 6,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 7,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 8,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 9,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 11,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 12,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 13,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 14,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 15,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 16,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 17,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 18,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 19,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 22,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "5": {
          "cells": [
            "D",
            "Uw: [U R' U', M2]",
            "[M2, L B L' B']",
            "Uw': [U' L' U, M2]",
            "B': #BU",
            "",
            "[L, U' M' U]",
            "L': #EG",
            "L: #ED",
            "z: [M, U L' U]",
            "[U L U', M']",
            "z' U2: [M, U R U']",
            "L U': #JK",
            "U: #JD",
            "L U': #JM",
            "L U': #JN",
            "z: [M, U' R U]",
            "U2:#JD",
            "",
            "M2: [U L U', M]",
            "Uw' L': [U M2 U', L']",
            "Uw R': [U' M2 U, R']",
            "L: [M' U' M, D2]"
          ],
          "successes": [
            {
              "original": 2,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "LB"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111115111222322222333332333444444444505555555"
            },
            {
              "original": 6,
              "edge_cycles": [
                [
                  "UL",
                  "BL",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "030000000111115111222022222333333323444444444515555555"
            },
            {
              "original": 10,
              "edge_cycles": [
                [
                  "UF",
                  "BL",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000300000111112111222025222333333323444444444515555555"
            }
          ],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 3,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 4,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 7,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 8,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 9,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 11,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 12,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 13,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 14,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 15,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 16,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 17,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 19,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 20,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 21,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 22,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "6": {
          "cells": [
            "E",
            "",
            "[M2, B L' B']",
            "y [M', U R2 U]",
            "U2: #LB",
            "[U' M' U, L]",
            "",
            "inv #FE",
            "inv #GE",
            "Uw': [M', U' R U]",
            "[L U L' U', M']",
            "Uw': [U' R' U, M']",
            "U':#JK",
            "M U M U2 M' U M'",
            "U': #JM",
            "U': #JN",
            "U': #JO",
            "U': #JE",
            "U': #JF",
            "M2: [L U L' U', M]",
            "y': [F R F', M']",
            "U: #JW",
            "[M' U' M, D2]"
          ],
          "successes": [
            {
              "original": 2,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "LU"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "030001000111115111222022222333332333444444444555550555"
            },
            {
              "original": 5,
              "edge_cycles": [
                [
                  "UL",
                  "FD",
                  "BL"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "020000000111115111222322222333333303444444444555551555"
            },
            {
              "original": 10,
              "edge_cycles": [
                [
                  "UF",
                  "UL",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "020000000111112111222025222333333333444444444555551555"
            },
            {
              "original": 13,
              "edge_cycles": [
                [
                  "UR",
                  "FD",
                  "UL"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000020111115111222022222333333333444441444555554555"
            },
            {
              "original": 22,
              "edge_cycles": [
                [
                  "UL",
                  "BD",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "030000000111115111222022222333233333444444444555551555"
            }
          ],
          "failures": [
            {
              "original": 4,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 7,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 8,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 9,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 11,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 12,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 14,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 15,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 16,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 17,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 18,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 19,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 20,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 21,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "7": {
          "cells": [
            "F",
            "Uw: [U' L U, M2]",
            "[M2, B L2 B]",
            "Uw': [U R U', M2]",
            "",
            "L: [U' M' U, L2]",
            "[L', U' M' U]",
            "",
            "L': #EF",
            "",
            "[U L' U', M']",
            "z' [M', U' R U]",
            "L' U': #JK //UaPLL",
            "U:#JL",
            "L' U': #JM",
            "L' U': #JN",
            "L' U: #JO",
            "U2: #JF",
            "z: [U' L' U, M']",
            "M2; [U L' U', M]",
            "Uw L: [U M2 U', L]",
            "Uw' R: [U' M2 U, R]",
            "L': [M' U' M, D2]"
          ],
          "successes": [
            {
              "original": 2,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "UF",
                  "LF",
                  "DB"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 5,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000501000111010111232222222333332333444444444555555515"
            },
            {
              "original": 6,
              "edge_cycles": [
                [
                  "UL",
                  "FL",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "020000000111115111222022222333333333444444444555555515"
            },
            {
              "original": 10,
              "edge_cycles": [
                [
                  "UF",
                  "FL",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000200000111112111222025222333333333444444444555555515"
            }
          ],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 3,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 5,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 8,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 12,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 14,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 15,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 16,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 17,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 18,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 19,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 20,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 21,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 22,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "8": {
          "cells": [
            "G",
            "y [M, U L2 U']",
            "[M2, B L B']",
            "y' U: [U M' U', R2]**",
            "y' [U M' U', R2]",
            "L2: [U' M' U, L']",
            "[L2, U' M' U]",
            "L2: [U' M' U, L]",
            "",
            "Uw L2: [U' M' U, L]",
            "[U L2 U', M']",
            "z' D': [M', U' R U]",
            "L2 U': #JK",
            "U:#JG",
            "L2 U': #JM",
            "L2 U': #JN",
            "L2 U: #JO",
            "U': #EG",
            "u: #FG",
            "M2; [U L2 U', M]",
            "",
            "y: [F' R F, M']",
            "L2: [M' U' M, D2]"
          ],
          "successes": [
            {
              "original": 2,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "LD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000131115111222122222333332333444444444555055555"
            },
            {
              "original": 6,
              "edge_cycles": [
                [
                  "UL",
                  "DL",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "010000000121115111222022222333333333444444444555155555"
            },
            {
              "original": 10,
              "edge_cycles": [
                [
                  "UF",
                  "DL",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000100000121112111222025222333333333444444444555155555"
            }
          ],
          "failures": [
            {
              "original": 3,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 5,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 7,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 9,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 11,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 12,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 14,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 15,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 16,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 17,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 18,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 19,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 21,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 22,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "9": {
          "cells": [
            "H",
            "[U M2 U, L']",
            "[M2, U' L' U]",
            "U': [M2, U' L' U]***",
            "U2:#HB",
            "z [U L U', M]",
            "Uw': [U' R U, M']",
            "",
            "Uw L:[U' M' U, L]",
            "",
            "Uw: [L, U' M' U]",
            "x M U M' U2 M U M'",
            "z: [U L' U', M']",
            "Uw: #JD",
            "B': #HB //R2; z [U L' U, M']",
            "Uw': #KN",
            "z: [M2, U' R U']",
            "U2 L: #JT",
            "L: #AT",
            "[B' L2 B, M]",
            "L': [U M2 U', L]",
            "L' U: #B2// z'; [U' M2 U, R]",
            "L' U: #BZ"
          ],
          "successes": [
            {
              "original": 2,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "FL"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111112111202522222333332333444444444555555535"
            },
            {
              "original": 19,
              "edge_cycles": [
                [
                  "DF",
                  "BD",
                  "FL"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000000111513111212122222333233333444444444555555525"
            }
          ],
          "failures": [
            {
              "original": 3,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 4,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 6,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 8,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 10,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 12,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 13,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 14,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 15,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 16,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 17,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 18,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 20,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 21,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 22,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "10": {
          "cells": [
            "J",
            "[M', F' L F] //[D' L2 D, M]",
            "D: [U R2 U\u2019, M']",
            "[F R F', M']",
            "",
            "[M', U L U']",
            "[M', L U L' U']",
            "[M', U L' U']",
            "[M', U L2 U']",
            "Uw: #ED",
            "",
            "Uw': [[U M' U', R']",
            "[M', U R U']",
            "[M', R' U' R U]",
            "[M', U' R' U]",
            "[M', U' R2 U]",
            "[M', F R2 F']//M2 U R' U' M U R U' M",
            "U': [M U M U2 M' U M']",
            "z: [U' L' U, M2]",
            "x D; [M', U R2 U']",
            "[M', F' L' F]",
            "[M, F R F']",
            "[U M' U' M, D2]"
          ],
          "successes": [
            {
              "original": 3,
              "edge_cycles": [
                [
                  "UF",
                  "RD",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000400000111112111222021222333333333444244444555555555"
            },
            {
              "original": 5,
              "edge_cycles": [
                [
                  "UF",
                  "FD",
                  "BL"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000200000111115111222321222333333303444444444525555555"
            },
            {
              "original": 6,
              "edge_cycles": [
                [
                  "UF",
                  "FD",
                  "UL"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000200000111115111222021222333333333444444444555552555"
            },
            {
              "original": 7,
              "edge_cycles": [
                [
                  "UF",
                  "FD",
                  "FL"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000200000111115111202221222333333333444444444555555525"
            },
            {
              "original": 8,
              "edge_cycles": [
                [
                  "UF",
                  "FD",
                  "DL"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000200000101115111222121222333333333444444444555255555"
            },
            {
              "original": 12,
              "edge_cycles": [
                [
                  "UB",
                  "FU",
                  "FR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000402000111111111222222202333330333434444444555555555"
            },
            {
              "original": 13,
              "edge_cycles": [
                [
                  "UR",
                  "UF",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000200000111114111222021222333333333444442444555555555"
            },
            {
              "original": 14,
              "edge_cycles": [
                [
                  "UF",
                  "FD",
                  "BR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000200000111114111222321222303333333444444424555555555"
            },
            {
              "original": 15,
              "edge_cycles": [
                [
                  "UF",
                  "FD",
                  "DR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000200000111114101222121222333333333444244444555555555"
            },
            {
              "original": 20,
              "edge_cycles": [
                [
                  "UF",
                  "FD",
                  "LD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000200000121111111222521222333333333444444444555055555"
            },
            {
              "original": 21,
              "edge_cycles": [
                [
                  "UB",
                  "DR",
                  "FU"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000301000111111121222220222333334333444044444555555555"
            },
            {
              "original": 22,
              "edge_cycles": [
                [
                  "UF",
                  "BD",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000300000111112111222021222333233333444444444555555555"
            }
          ],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 2,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 9,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 11,
              "failure_id": 4,
              "failure_description": "Unmatched brackets found: '[':2.0, ']':1.0"
            },
            {
              "original": 16,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 17,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 18,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 19,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "11": {
          "cells": [
            "I",
            "U: [M2, U R U'] // R: [U M' U2 M U]",
            "[M2, U R U']",
            "[U' M2 U, R]",
            "U2: #IB",
            "B': [U R U', M2]*",
            "Uw': [U' R' U, M']",
            "z' [U' R U, M']",
            "z' D: [U' R U, M']",
            "x M U' M' U2 M U' M'",
            "Uw': [R', U M' U']",
            "",
            "",
            "Uw: #FJ",
            "z' [U' R U, M]//B';#IB",
            "Uw': #MN",
            "R: [U' M2 U, R2]",
            "U2 R': #JW",
            "[F' L2 F, M']",
            "[B R2 B', M]",
            "R U': #BT",
            "R; [U' M2 U, R]",
            "R U': #BZ"
          ],
          "successes": [
            {
              "original": 2,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "FR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111112111222422202333332333434444444555555555"
            },
            {
              "original": 3,
              "edge_cycles": [
                [
                  "UR",
                  "DF",
                  "FR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000010111112111222422202333333333444442444555555555"
            },
            {
              "original": 18,
              "edge_cycles": [
                [
                  "UF",
                  "LB",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000500000111112111222023222333333313444444444525555555"
            },
            {
              "original": 19,
              "edge_cycles": [
                [
                  "DF",
                  "BD",
                  "FR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000000111413111222122212333233333424444444555555555"
            }
          ],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 4,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 5,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 6,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 8,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 10,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 13,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 14,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 15,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 16,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 17,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 20,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 21,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 22,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "12": {
          "cells": [
            "K",
            "Uw: [U' R U, M2]",
            "[M2, B' R2 B]",
            "Uw': [U R' U', M2]",
            "Uw': OC",
            "R U: [M', U L U']",
            "U': [U' R U, M']",
            "R U: [M', U L' U'] //Ua perm",
            "R U: [M', U L2 U']",
            "z [M', U L' U']",
            "[U' R U, M']",
            "",
            "",
            "[U M' U', R]",
            "R: [U M' U', R2]",
            "R: [U M' U', R]",
            "z: [M', U' R U]",
            "U2: #JK",
            "R2 z'; [U L' U, M]",
            "M2; [U' R U, M]",
            "Uw': #HT",
            "Uw' R': [U' M2 U, R']",
            "R: [M' U M, D2]"
          ],
          "successes": [
            {
              "original": 2,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "RF"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111114111222222232333332333404444444555555555"
            },
            {
              "original": 10,
              "edge_cycles": [
                [
                  "UF",
                  "FR",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000200000111112111222024222333333333414444444555555555"
            },
            {
              "original": 13,
              "edge_cycles": [
                [
                  "UR",
                  "FD",
                  "FR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000020111114111222222202333333333444441444555555555"
            }
          ],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 3,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 4,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 5,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 6,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 7,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 8,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 14,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 15,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 16,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 17,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 18,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 19,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 20,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 21,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 22,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "13": {
          "cells": [
            "L",
            "y' [M, U' R2 U]",
            "[M2, B' R B]",
            "",
            "U2:#EB",
            "U: #JD",
            "[M U M U2 M' U M']",
            "U: [M', U L' U']",
            "U: [M', U L2 U']",
            "Uw: #JD",
            "[R' U' R U, M']",
            "Uw: [M', U L' U']",
            "[U M' U', R]",
            "",
            "[U M' U', R2]",
            "[U M' U', R2]",
            "U:#JO //Uw",
            "U:#JL",
            "u; [U' R' U, M']",
            "M2; [R' U' R U, M]",
            "U: #JT",
            "U; #JW",
            "[M' U M, D2]"
          ],
          "successes": [
            {
              "original": 2,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "RU"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001030111114111222022222333332333444440444555555555"
            },
            {
              "original": 6,
              "edge_cycles": [
                [
                  "UR",
                  "FD",
                  "UL"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000020111115111222022222333333333444441444555554555"
            },
            {
              "original": 10,
              "edge_cycles": [
                [
                  "UR",
                  "FD",
                  "UF"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000020111112111222024222333333333444441444555555555"
            },
            {
              "original": 12,
              "edge_cycles": [
                [
                  "UR",
                  "FD",
                  "FR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000020111114111222222202333333333444441444555555555"
            },
            {
              "original": 14,
              "edge_cycles": [
                [
                  "UR",
                  "FD",
                  "DR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000020111114101222122222333333333444441444555555555"
            },
            {
              "original": 15,
              "edge_cycles": [
                [
                  "UR",
                  "FD",
                  "DR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000020111114101222122222333333333444441444555555555"
            },
            {
              "original": 22,
              "edge_cycles": [
                [
                  "UR",
                  "BD",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000030111114111222022222333233333444441444555555555"
            }
          ],
          "failures": [
            {
              "original": 4,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 5,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 7,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 8,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 9,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 11,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 16,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 18,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 19,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 20,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 21,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "14": {
          "cells": [
            "M",
            "Uw: [U R U', M2]",
            "[M2, R' B' R B]",
            "Uw': [U' L U, M2]",
            "B: #BU",
            "R' U: #JD",
            "U': [U' R U, M']",
            "R' U: [M', U L' U']",
            "R' U: [M', U L2 U']",
            "z U2: [M, U' L' U]",
            "[U' R' U, M']",
            "z': [M', U' R U]",
            "R': #LK",
            "[U M' U', R']",
            "",
            "R': [U M' U, R']",
            "",
            "U:#LM",
            "[U L' U, M]",
            "M2; [U' R' U, M]",
            "Uw' L: [U M2 U', L]",
            "Uw R: [U' M2 U, R]",
            "R\": [M' U M, D2]"
          ],
          "successes": [
            {
              "original": 2,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "RB"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111114111222322222333332333444444404555555555"
            },
            {
              "original": 10,
              "edge_cycles": [
                [
                  "UF",
                  "BR",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000300000111112111222024222323333333444444414555555555"
            },
            {
              "original": 13,
              "edge_cycles": [
                [
                  "UR",
                  "FD",
                  "BR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000020111114111222322222303333333444441444555555555"
            },
            {
              "original": 18,
              "edge_cycles": [
                [
                  "UB",
                  "FU"
                ],
                [
                  "DB",
                  "FL"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 4,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000002000111211111232223222333530333444444444555555515"
            }
          ],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 3,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 4,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 5,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 6,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 7,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 8,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 9,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 11,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 12,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 15,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 19,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 20,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 21,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 22,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "15": {
          "cells": [
            "N",
            "[y' U': [U' M U, R2]]**",
            "[M2, B' R' B]",
            "U': [M2, B' R' B]",
            "y' [U M U', R2]",
            "R2 U: #JD",
            "U': [U' R2 U, M']",
            "R2 U: [M', U L' U']",
            "R2 U: [M', U L2 U']",
            "z D: [M', U L' U']",
            "[U' R2 U, M']",
            "Uw' R2: [U M' U', R']",
            "R2: [U M' U, R']",
            "[U M' U', R2]",
            "R2: [U M' U', R]",
            "",
            "Uw': #NK",
            "U:#LN",
            "u R'; [U M' U', R']",
            "M2; [U' R2 U, M]",
            "y: [F' L' F, M']",
            "",
            "R2: [M' U M, D2]"
          ],
          "successes": [
            {
              "original": 2,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "RD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111114131222122222333332333444044444555555555"
            },
            {
              "original": 10,
              "edge_cycles": [
                [
                  "UF",
                  "DR",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000100000111112121222024222333333333444144444555555555"
            },
            {
              "original": 13,
              "edge_cycles": [
                [
                  "UR",
                  "FD",
                  "DR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000020111114101222122222333333333444441444555555555"
            }
          ],
          "failures": [
            {
              "original": 1,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 3,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 5,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 6,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 7,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 8,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 9,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 11,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 12,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 14,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 16,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 18,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 19,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 20,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 22,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "16": {
          "cells": [
            "O",
            "U: [M2, U R' U'] // R': [U M' U2 M U]",
            "[M2, U R' U']",
            "[U' M2 U, R']",
            "U2: #OB",
            "z' [U R U', M]",
            "U': [F R2 F', M']",
            "z': U2 [U' R U, M]",
            "z': U2  D' [U' R U, M]' ",
            "z: [M2, U L' U']]",
            "[F R2 F', M']",
            "R': [U' M2 U, R2]",
            "z' [U R U', M']",
            "Uw: #KJ",
            "",
            "Uw: #KN",
            "",
            "U2:#JO",
            "L U #BO",
            "M2: [F R2 F', M]",
            "R' U: #BT",
            "R'; [U M2 U', R']",
            "R' U': #BD"
          ],
          "successes": [
            {
              "original": 2,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "BR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111113111222422222303332333444444434555555555"
            },
            {
              "original": 3,
              "edge_cycles": [
                [
                  "UR",
                  "DF",
                  "BR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000010111113111222422222303333333444442444555555555"
            },
            {
              "original": 10,
              "edge_cycles": [
                [
                  "UF",
                  "RB",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000400000111112111222023222313333333444444424555555555"
            }
          ],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 4,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 6,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 7,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 8,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 9,
              "failure_id": 4,
              "failure_description": "Unmatched brackets found: '[':1.0, ']':2.0"
            },
            {
              "original": 11,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 13,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 15,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 17,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 18,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 19,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 20,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 21,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 22,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "17": {
          "cells": [
            "P",
            "U: [M2, R B' R]",
            "",
            "U': [M2, B L' B]",
            "y': [R2, U' M' U]",
            "U2 #JD",
            "U': [L U L' U', M']",
            "U2: [M', U L' U']",
            "U2: [M', U L2 U']",
            "F': [U R U', M2]**",
            "U: [M U M U2 M' U' M']",
            "F: [U' L' U, M2]**",
            "U2: #JK",
            "U: #LJ",
            "U2: #JM",
            "U2: [M', U R2 U']",
            "U2: #JO",
            "",
            "",
            "x' U' M' U M' U2 M U M U x*",
            "U2: #JT",
            "U2; #JW",
            "[U' M' U' M, D2]"
          ],
          "successes": [
            {
              "original": 22,
              "edge_cycles": [
                [
                  "UB",
                  "BD",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000003000111113111222022222333231333444444444555555555"
            }
          ],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 3,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 4,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 5,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 6,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 7,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 8,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 9,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 10,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 11,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 12,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 13,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 14,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 15,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 16,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 19,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 20,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 21,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "18": {
          "cells": [
            "R",
            "[U M2 U, L]",
            "[M2, U' L U]",
            "U': [M2, U' L U]****",
            "U2: #RB",
            "",
            "U': [F' L2 F, M']",
            "z: [U L' U', M']",
            "Uw' L': [U' M U, L']",
            "L: [U M2 U', L2]",
            "[F' L2 F, M']",
            "z': [M2, U' R U]",
            "z U2; [U L' U', M']",
            "Uw: #MJ",
            "z [U' L' U, M]",
            "z D': [U L' U', M]",
            "z U2: [M2, U R U']",
            "Uw': #EF",
            "",
            "M2: [F' L2 F, M]",
            "L: [U M2 U', L]",
            "L U: #BW// z': [U' M U, R]",
            "L U: #BD"
          ],
          "successes": [
            {
              "original": 2,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "BL"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111113111222522222333332303444444444535555555"
            },
            {
              "original": 10,
              "edge_cycles": [
                [
                  "UF",
                  "LB",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000500000111112111222023222333333313444444444525555555"
            }
          ],
          "failures": [
            {
              "original": 3,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 4,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 6,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 7,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 8,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 9,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 11,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 12,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 13,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 15,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 16,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 17,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 19,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 20,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 21,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 22,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "19": {
          "cells": [
            "S",
            "[B' L' B, M]",
            "M2 D: [M', U R2 U']",
            "[B R B', M]",
            "U2: #SB*",
            "M2: [M, U L U']",
            "M2: [M, L U L' U']*",
            "M2: [M, U L' U']",
            "M2: [M, U L2 U']",
            "[x': [M, U' L2 U]]",
            "x D: [U R2 U', M']",
            "x': [M, U R2 U']",
            "M2: [M, U' R U]",
            "M2: [M, R' U' R U]",
            "M2 [M, U' R' U]",
            "M2: [M, U' R2 U]",
            "M2: [M, F R2 F']",
            "U:#ES",
            "",
            "",
            "M2: [M, F' L' F]",
            "M2: [M, F R F']"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UL",
                  "DF",
                  "BD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "010000000111513111222122222333033333444444444555552555"
            },
            {
              "original": 3,
              "edge_cycles": [
                [
                  "UR",
                  "DF",
                  "BD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000010111413111222122222333033333444442444555555555"
            },
            {
              "original": 9,
              "edge_cycles": [
                [
                  "DF",
                  "FL",
                  "BD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000000111212111232522222333133333444444444555555515"
            },
            {
              "original": 14,
              "edge_cycles": [
                [
                  "UB",
                  "RB",
                  "BD",
                  "FU",
                  "DF"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 5,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000214000111000111222331222313223333444444434555555555"
            }
          ],
          "failures": [
            {
              "original": 2,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 4,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 5,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 6,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 7,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 8,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 10,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 11,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 12,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 13,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 15,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 16,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 20,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 21,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "20": {
          "cells": [
            "T",
            "[U M2 U, L2]",
            "[M2, U' L2 U]",
            "y [M2, U R2 U]*****",
            "y' [U' M2 U, R2]",
            "\rz' R: [U' M U, R]",
            "\r[M' U' M, D]",
            "z' R: [U M' U', R]",
            "",
            "L2: [U M2 U', L]",
            "[F' L' F, M']",
            "[z: [L', U M2 U']",
            "z U' [U L' U', M']",
            "U:#TJ",
            "L: z [U' L' U, M]",
            "y': [M, F' L' F]",
            "z U': [U L' U, M2]",
            "U2:#JT",
            "",
            "[B' L B, M]",
            "",
            "x2: Ub",
            "L2 U: #BD"
          ],
          "successes": [
            {
              "original": 2,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "DL"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000101111111222522222333332333444444444555355555"
            },
            {
              "original": 6,
              "edge_cycles": [
                [
                  "UL",
                  "LD",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "050000000111115111222022222333333333444444444555251555"
            },
            {
              "original": 10,
              "edge_cycles": [
                [
                  "UF",
                  "LD",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000500000111112111222021222333333333444444444555255555"
            },
            {
              "original": 19,
              "edge_cycles": [
                [
                  "DF",
                  "BD",
                  "DL"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000000111513111222122222333133333444444444555255555"
            }
          ],
          "failures": [
            {
              "original": 3,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 5,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 7,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 9,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 11,
              "failure_id": 4,
              "failure_description": "Unmatched brackets found: '[':2.0, ']':1.0"
            },
            {
              "original": 14,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 15,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 16,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 17,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 22,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "21": {
          "cells": [
            "W",
            "U: [M2, U R2 U'] //R2: [U M' U2 M U]***",
            "[M2, U R2 U']",
            "[U' M2 U, R2]",
            "y' [U M2 U', R2]",
            "z': [R, U' M' U",
            "[M' U' M, D']",
            "z': [R, U M' U']",
            "\rx z: [M', U' R U]",
            "z': [R, U' M2 U]***",
            "[F R F', M']",
            "R2: [U' M2 U, R']",
            "[z L': [U' M' U, L']",
            "U: #WJ",
            "Uw R2: [U' M2 U, R']",
            "",
            "R2: [U' M2 U, R]",
            "U2:#JW",
            "",
            "[B R' B, M]",
            "x2: Ua",
            "",
            "R2 U: #BD"
          ],
          "successes": [
            {
              "original": 2,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "DR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111111101222422222333332333444344444555555555"
            },
            {
              "original": 3,
              "edge_cycles": [
                [
                  "UR",
                  "DF",
                  "DR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000010111111101222422222333333333444442444555555555"
            },
            {
              "original": 6,
              "edge_cycles": [
                [
                  "UL",
                  "RD",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "040000000111115111222022222333333333444244444555551555"
            },
            {
              "original": 10,
              "edge_cycles": [
                [
                  "UF",
                  "RD",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000400000111112111222021222333333333444244444555555555"
            },
            {
              "original": 19,
              "edge_cycles": [
                [
                  "UB",
                  "RD"
                ],
                [
                  "DF",
                  "BD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 4,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000004000111113101222122222333231333444344444555555555"
            }
          ],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 5,
              "failure_id": 4,
              "failure_description": "Unmatched brackets found: '[':1.0, ']':0.0"
            },
            {
              "original": 7,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 8,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 9,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 11,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 12,
              "failure_id": 4,
              "failure_description": "Unmatched brackets found: '[':2.0, ']':1.0"
            },
            {
              "original": 13,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 14,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 16,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 17,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 20,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 22,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "22": {
          "cells": [
            "Z",
            "U u2 M u2 M U' //[U: [M', D2]]****",
            "u2 M u2 M // [D2, M']",
            "U' u2 M u2 M U // U' M2 U2 M U2 M U",
            "[D2, M]**",
            "x: [M' U2 M, D]**",
            "[M' U' M, D2]",
            "x: [U', M D2 M']*",
            "x L': [U', M D2 M']*",
            "L' U' x: [M', U2]",
            "[U M' U' M, D2]",
            "R U x: [M', U2]",
            "R: [M' U' M, D2]",
            "[M' U M, D2]",
            "[x: D', M' U2 M]",
            "B2: #BN",
            "R' U: #ZB",
            "[U' M' U' M, D2]",
            "",
            "",
            "x y' F: [U M' U', R2] //L2 U; #BZ",
            "R2 U x: [M', U2]"
          ],
          "successes": [
            {
              "original": 6,
              "edge_cycles": [
                [
                  "UL",
                  "BD",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "030000000111115111222022222333233333444444444555551555"
            },
            {
              "original": 10,
              "edge_cycles": [
                [
                  "UF",
                  "BD",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000300000111112111222021222333233333444444444555555555"
            },
            {
              "original": 13,
              "edge_cycles": [
                [
                  "UR",
                  "BD",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000030111114111222022222333233333444441444555555555"
            },
            {
              "original": 14,
              "edge_cycles": [
                [
                  "DF",
                  "DB",
                  "RB"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000000111411111222322222323333333444444414555555555"
            },
            {
              "original": 17,
              "edge_cycles": [
                [
                  "UB",
                  "BD",
                  "FD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000003000111113111222022222333231333444444444555555555"
            }
          ],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 2,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 3,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 4,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 5,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 7,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 8,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 9,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 11,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 12,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            },
            {
              "original": 15,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 16,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 20,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 21,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "24": {
          "cells": [
            "",
            "*U2: [R' U R U', M2]",
            "",
            "*U2: [L U' L' U, M2]",
            "*\"x U: [M U' M U2 M' U' M'] // \r\nx': [U M' U M, D2]\"",
            "*z' D2: [U' R U, M']",
            "*U': #JS",
            "*[L': [M' U' M, D2]",
            "*[L2: [M' U' M, D2]",
            "* R: [U' M' U2 M U']",
            "",
            "*** [x' U': [U' M U', R2]]",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "U M2: [R' U' R U, M]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 3,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 4,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 5,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 6,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 7,
              "failure_id": 4,
              "failure_description": "Unmatched brackets found: '[':2.0, ']':1.0"
            },
            {
              "original": 8,
              "failure_id": 4,
              "failure_description": "Unmatched brackets found: '[':2.0, ']':1.0"
            },
            {
              "original": 9,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 11,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 19,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "25": {
          "cells": [
            "",
            "** U: [M2, B' R' B]",
            "",
            "** U': [M2, B L B']",
            "** M U2 M U2 M U2 M U2",
            "**L: [M' U' M, D2]",
            "",
            "",
            "",
            "** [x' U: [U M U', L2]]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 3,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 4,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 5,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 9,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            }
          ]
        },
        "26": {
          "cells": [
            "",
            "***[y': [M2, U' R2 U]]",
            "",
            "***  L': [U' M' U2 M U']",
            "",
            "",
            "",
            "",
            "",
            "***  x R: [M U' M' U2 M U' M']"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 3,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            },
            {
              "original": 9,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            }
          ]
        },
        "27": {
          "cells": [
            "",
            "****[U: [M', D2]] //U': [D2, M]",
            "",
            "****   L: [U' M' U2 M U']"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            },
            {
              "original": 3,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            }
          ]
        },
        "28": {
          "cells": [
            "",
            "",
            "",
            "***** U': [M2, U L2 U'] L2: [U' M' U2 M U']"
          ],
          "successes": [],
          "failures": [
            {
              "original": 3,
              "failure_id": 1,
              "failure_description": "Regex did not replace the multiplier statements, probably due to an invalid number of iterations specified."
            }
          ]
        },
        "31": {
          "cells": [
            "",
            "[M2, L U' L' U]"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "UL"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111110111222522222333332333444444444555553555"
            }
          ],
          "failures": []
        },
        "32": {
          "cells": [
            "",
            "[M2, R' U R U']"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "UR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111110111222422222333332333444443444555555555"
            }
          ],
          "failures": []
        },
        "33": {
          "cells": [
            "",
            "M' U2 M U2"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "UF"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111110111222223222333332333444444444555555555"
            }
          ],
          "failures": []
        },
        "34": {
          "cells": [
            "",
            "[M2, L B L' B']"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "LB"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111115111222322222333332333444444444505555555"
            }
          ],
          "failures": []
        },
        "35": {
          "cells": [
            "",
            "[M2, B L' B']"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "LU"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "030001000111115111222022222333332333444444444555550555"
            }
          ],
          "failures": []
        },
        "36": {
          "cells": [
            "",
            "[M2, B L2 B]"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "UF",
                  "LF",
                  "DB"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 5,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000501000111010111232222222333332333444444444555555515"
            }
          ],
          "failures": []
        },
        "37": {
          "cells": [
            "",
            "[M2, B L B']"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "LD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000131115111222122222333332333444444444555055555"
            }
          ],
          "failures": []
        },
        "38": {
          "cells": [
            "",
            "[M2, U' L' U]"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "FL"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111112111202522222333332333444444444555555535"
            }
          ],
          "failures": []
        },
        "39": {
          "cells": [
            "",
            "D: [U R2 U\u2019, M']"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "40": {
          "cells": [
            "",
            "[M2, U R U']"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "FR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111112111222422202333332333434444444555555555"
            }
          ],
          "failures": []
        },
        "41": {
          "cells": [
            "",
            "[M2, B' R2 B]"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "RF"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111114111222222232333332333404444444555555555"
            }
          ],
          "failures": []
        },
        "42": {
          "cells": [
            "",
            "[M2, B' R B]"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "RU"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001030111114111222022222333332333444440444555555555"
            }
          ],
          "failures": []
        },
        "43": {
          "cells": [
            "",
            "[M2, R' B' R B]"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "RB"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111114111222322222333332333444444404555555555"
            }
          ],
          "failures": []
        },
        "44": {
          "cells": [
            "",
            "[M2, B' R' B]"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "RD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111114131222122222333332333444044444555555555"
            }
          ],
          "failures": []
        },
        "45": {
          "cells": [
            "",
            "[M2, U R' U']"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "BR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111113111222422222303332333444444434555555555"
            }
          ],
          "failures": []
        },
        "46": {
          "cells": [
            "",
            "[M2, U' L U]"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "BL"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111113111222522222333332303444444444535555555"
            }
          ],
          "failures": []
        },
        "47": {
          "cells": [
            "",
            "M2 D: [M', U R2 U']"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "48": {
          "cells": [
            "",
            "[M2, U' L2 U]"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "DL"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000101111111222522222333332333444444444555355555"
            }
          ],
          "failures": []
        },
        "49": {
          "cells": [
            "",
            "[M2, U R2 U']"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UB",
                  "DF",
                  "DR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000001000111111101222422222333332333444344444555555555"
            }
          ],
          "failures": []
        },
        "50": {
          "cells": [
            "",
            "u2 M u2 M // M2 U2 M U2 M"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "52": {
          "cells": [
            "",
            "[L U' L' U, M2]"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UB",
                  "UL",
                  "DF"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "010000000111110111222322222333335333444444444555552555"
            }
          ],
          "failures": []
        },
        "53": {
          "cells": [
            "",
            "U M' U2 M U"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UR",
                  "UL",
                  "DF"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "010000000111110111222422222333333333444445444555552555"
            }
          ],
          "failures": []
        },
        "54": {
          "cells": [
            "",
            "U2: [R' U R U', M2]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "55": {
          "cells": [
            "",
            "U: [M2, L B L' B']"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "56": {
          "cells": [
            "",
            "U: [M2, B L2 B]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "57": {
          "cells": [
            "",
            "U: [M2, B L B']"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "58": {
          "cells": [
            "",
            "U: [M2, U' L' U] = [U M2 U, L']"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "59": {
          "cells": [
            "",
            "[L U L' U', M]"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UB",
                  "FU",
                  "LU"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "030002000111111111222225222333330333444444444555550555"
            }
          ],
          "failures": []
        },
        "60": {
          "cells": [
            "",
            "U: [M2, U R U'] // R: [U M' U2 M U]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "61": {
          "cells": [
            "",
            "U: [M2, B' R2 B]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "62": {
          "cells": [
            "",
            "R B: [L U' L' U, M2]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "63": {
          "cells": [
            "",
            "U: [M2, R' B' R B]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "64": {
          "cells": [
            "",
            "U: [M2, B' R' B]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "65": {
          "cells": [
            "",
            "U: [M2, U R' U'] // R': [U M' U2 M U]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "66": {
          "cells": [
            "",
            "U: [M2, R B' R]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "67": {
          "cells": [
            "",
            "U: [M2, U' L U] = [U M2 U, L]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "68": {
          "cells": [
            "",
            "[B' L' B, M]"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UL",
                  "DF",
                  "BD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "010000000111513111222122222333033333444444444555552555"
            }
          ],
          "failures": []
        },
        "69": {
          "cells": [
            "",
            "U: [M2, U L2 U'] = [U M2 U, L2]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "70": {
          "cells": [
            "",
            "U: [M2, U R2 U'] //R2: [U M' U2 M U]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "71": {
          "cells": [
            "",
            "U u2 M u2 M U' // U M2 U2 M U2 M U'"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "73": {
          "cells": [
            "",
            "U' M' U2 M U'"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UR",
                  "DF",
                  "UL"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000010111110111222522222333333333444442444555554555"
            }
          ],
          "failures": []
        },
        "74": {
          "cells": [
            "",
            "[R' U R U', M2]"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UB",
                  "UR",
                  "DF"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000010111110111222322222333334333444442444555555555"
            }
          ],
          "failures": []
        },
        "75": {
          "cells": [
            "",
            "U2: [L U' L' U, M2]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "76": {
          "cells": [
            "",
            "B': [R' U R U', M2]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "77": {
          "cells": [
            "",
            "L' B': [R' U R U', M2]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "78": {
          "cells": [
            "",
            "U': [M2, B L2 B']"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "79": {
          "cells": [
            "",
            "U': [M2, B L B']"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "80": {
          "cells": [
            "",
            "U': [M2, U' L' U] // L': [U' M' U2 M U']"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "81": {
          "cells": [
            "",
            "[R' U' R U, M]"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UB",
                  "FU",
                  "RU"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000002030111111111222224222333330333444440444555555555"
            }
          ],
          "failures": []
        },
        "82": {
          "cells": [
            "",
            "U': [M2, U R U'] = [U' M2 U, R]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "83": {
          "cells": [
            "",
            "U': [M2, B' R2 B]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "84": {
          "cells": [
            "",
            "B: [R' U R U', M2]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "85": {
          "cells": [
            "",
            "U': [M2, B' R' B]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "86": {
          "cells": [
            "",
            "U': [M2, U R' U'] = [U' M2 U, R']"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "87": {
          "cells": [
            "",
            "U': [M2, B L' B]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "88": {
          "cells": [
            "",
            "U': [M2, U' L U] // L: [U' M' U2 M U']"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "89": {
          "cells": [
            "",
            "[B R B', M]"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UR",
                  "DF",
                  "BD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000010111413111222122222333033333444442444555555555"
            }
          ],
          "failures": []
        },
        "90": {
          "cells": [
            "",
            "U': [M2, U L2 U']// L2: [U' M' U2 M U']"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "91": {
          "cells": [
            "",
            "U': [M2, U R2 U'] = [U' M2 U, R2]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "92": {
          "cells": [
            "",
            "U' u2 M u2 M U // U' M2 U2 M U2 M U"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "95": {
          "cells": [
            "",
            "[M', F' L F] //[D' L2 D, M]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "96": {
          "cells": [
            "",
            "D: [M', U R2 U']"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "97": {
          "cells": [
            "",
            "[M', F R' F] //[D R2 D', M]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "98": {
          "cells": [
            "",
            "[M', U L U']"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UF",
                  "FD",
                  "BL"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000200000111115111222321222333333303444444444525555555"
            }
          ],
          "failures": []
        },
        "99": {
          "cells": [
            "",
            "[M', L U L' U'] // [D' L2 D, M]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "100": {
          "cells": [
            "",
            "[M', U L' U']"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UF",
                  "FD",
                  "FL"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000200000111115111202221222333333333444444444555555525"
            }
          ],
          "failures": []
        },
        "101": {
          "cells": [
            "",
            "[M', U L2 U']"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UF",
                  "FD",
                  "DL"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000200000101115111222121222333333333444444444555255555"
            }
          ],
          "failures": []
        },
        "102": {
          "cells": [
            "",
            "[M', L F' L' F] // [D' L D, M]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "103": {
          "cells": [
            "",
            "[M', R' F R F'] //[D R' D, M]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "104": {
          "cells": [
            "",
            "[M', U' R U]"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UF",
                  "FD",
                  "FR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000200000111114111222221202333333333424444444555555555"
            }
          ],
          "failures": []
        },
        "105": {
          "cells": [
            "",
            "[M', R' U' R U] //[F R' F', M]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "106": {
          "cells": [
            "",
            "[M', U' R' U]"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UF",
                  "FD",
                  "BR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000200000111114111222321222303333333444444424555555555"
            }
          ],
          "failures": []
        },
        "107": {
          "cells": [
            "",
            "[M', U' R2 U]"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UF",
                  "FD",
                  "DR"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000200000111114101222121222333333333444244444555555555"
            }
          ],
          "failures": []
        },
        "108": {
          "cells": [
            "",
            "[M', F R2 F']"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UF",
                  "FD",
                  "RB"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000200000111113111222421222323333333444444404555555555"
            }
          ],
          "failures": []
        },
        "109": {
          "cells": [
            "",
            "D: [M D' M', U2]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "110": {
          "cells": [
            "",
            "M', F' R2 F] // [D' L' D, M]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 4,
              "failure_description": "Unmatched brackets found: '[':1.0, ']':2.0"
            }
          ]
        },
        "111": {
          "cells": [
            "",
            "x D: [M\u2019, U R2 U\u2019]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 2,
              "failure_description": "':' not a valid move in SiGN or WCA notation."
            }
          ]
        },
        "112": {
          "cells": [
            "",
            "[M', F' L' F]"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "UF",
                  "FD",
                  "LD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000200000121111111222521222333333333444444444555055555"
            }
          ],
          "failures": []
        },
        "113": {
          "cells": [
            "",
            "[M', F' R F]"
          ],
          "successes": [
            {
              "original": 1,
              "edge_cycles": [
                [
                  "DF",
                  "BD",
                  "RD"
                ]
              ],
              "corner_cycles": [],
              "unsolved_corners_count": 0,
              "unsolved_edges_count": 3,
              "flipped_edges_count": 0,
              "twisted_corners_count": 0,
              "parity_flag": true,
              "signature": "000000000111113121222122222333433333444144444555555555"
            }
          ],
          "failures": []
        },
        "114": {
          "cells": [
            "",
            "D [M\u2019, U R2 U\u2019] D' M2 U2 M' U2 M'// [U' M U' M', D2]"
          ],
          "successes": [],
          "failures": [
            {
              "original": 1,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        }
      }
    },
    "1612155134": {
      "range": "Parity!A1:A12",
      "values": {
        "0": {
          "cells": [
            "Parity in 3bld. I switch UBL and UBR with last target. In the end of the solve I last target with UB and U Lw R U2 Rw' U' Rw U2 Lw' U R' U2"
          ],
          "successes": [],
          "failures": []
        },
        "1": {
          "cells": [
            "If last target is BU: U Lw U' R' U Lw' U2 Rw U' Rw' U2 R U'"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "2": {
          "cells": [
            "Parity in mbld. I do edges first. After edged I do [D' L2 D: M2] and last target I do with OP."
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "4": {
          "cells": [
            "Parity w 4bld:"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "5": {
          "cells": [
            "- corner parity: switch UBR and  UBL and in the end of the solve: r2 U2 r2 U2 u2 r2 u2 and y PLL T"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "6": {
          "cells": [
            "- edge parity: r' U2 r U2 r' U2 x' r U2 r U2 r U2 r2 U2 x r' U2 (Robert Yau)"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "8": {
          "cells": [
            "Parity w 5bld:"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "9": {
          "cells": [
            "- wings parity same like edge parity in 4bld"
          ],
          "successes": [],
          "failures": [
            {
              "original": 0,
              "failure_id": 6,
              "failure_description": "Contains characters that don't correspond to anything in cubing notation."
            }
          ]
        },
        "10": {
          "cells": [
            "- edge parity: swithc UBR and UBL with last target. In the end of the solve: F2 (Rr2 F2 U2 r2 U2 F2 Rr2) y PLL T  L2"
          ],
          "successes": [],
          "failures": []
        }
      }
    }
  }
}